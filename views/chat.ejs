<!DOCTYPE html>
<html>
<head>
  <title>Chat Interface</title>
  <link rel="stylesheet" href="/css/style.css"> <!-- Ensure the path to CSS is correct -->
  <script src="/socket.io/socket.io.js"></script>
</head>
<body data-user-id="<%= userId %>" data-request-id="<%= requestId %>">
  <header>
    <!-- Navigation Bar -->
    <nav>
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/requests/new">Submit New Request</a></li>
        <li><a href="/chat">Go to Chat</a></li>
        <li><a href="/auth/logout">Logout</a></li>
      </ul>
    </nav>
  </header>
  <main>
    <ul id="messages">
      <% chat.forEach(function(msg) { %>
        <li><%= msg.messageText %></li>
      <% }); %>
    </ul>
    <form id="form" action="">
      <input id="input" autocomplete="off" /><button>Send</button>
    </form>
    <section id="feedback-section">
      <h3>Your Feedback</h3>
      <form id="feedbackForm">
        <label for="satisfaction">How satisfied were you with the assistance provided?</label>
        <select id="satisfaction" name="satisfaction">
          <option value="positive">Positive</option>
          <option value="neutral">Neutral</option>
          <option value="negative">Negative</option>
        </select>
        <button type="submit">Submit Feedback</button>
      </form>
    </section>
  </main>
  <script src="/js/chatInterface.js"></script>
  <script>
    var socket = io();

    var form = document.getElementById('form');
    var input = document.getElementById('input');
    var userId = document.body.getAttribute('data-user-id');
    var requestId = document.body.getAttribute('data-request-id');

    if (!userId || !requestId) {
      console.error('Missing userId or requestId. Please ensure you are logged in and have selected a valid request.');
      alert('Missing userId or requestId. You will be redirected to the homepage.');
      window.location.href = '/';
    }

    socket.emit('join room', requestId);

    form.addEventListener('submit', function(e) {
      e.preventDefault();
      if (input.value.trim()) {
        console.log('Sending message:', input.value);
        socket.emit('send message', { roomId: requestId, text: input.value, sender: 'user', userId: userId });
        input.value = '';
      }
    });

    socket.on('new message', function(data) {
      console.log('Message received:', data.text);
      var item = document.createElement('li');
      item.textContent = data.text; // Assuming data is an object with a text property
      document.getElementById('messages').appendChild(item);
      window.scrollTo(0, document.body.scrollHeight);
    });

    socket.on('connect_error', (err) => {
      console.error('Connection error:', err.message, err.stack);
    });

    document.getElementById('feedbackForm').addEventListener('submit', function(e) {
      e.preventDefault();
      var satisfaction = document.getElementById('satisfaction').value;
      var feedbackData = { requestId: requestId, userSatisfaction: satisfaction };
      
      fetch('/api/feedback', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(feedbackData),
      })
      .then(response => response.json())
      .then(data => {
        console.log('Feedback submitted:', data);
        alert('Thank you for your feedback!');
      })
      .catch((error) => {
        console.error('Error submitting feedback:', error);
      });
    });
  </script>
</body>
</html>