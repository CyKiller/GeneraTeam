<!DOCTYPE html>
<html>
<head>
  <title>Chat Interface</title>
  <link rel="stylesheet" href="/css/style.css">
  <link rel="stylesheet" href="/css/chatStyle.css">
  <script src="/socket.io/socket.io.js"></script>
</head>
<body data-user-id="<%= userId %>" data-request-id="<%= requestId %>">
  <header>
    <nav>
      <ul>
        <li><a href="/">Home</a></li>
        <li><a href="/requests/new">Submit New Request</a></li>
        <li><a href="/chat">Go to Chat</a></li>
        <li><a href="/auth/logout">Logout</a></li>
      </ul>
    </nav>
  </header>
  <main class="chat-main">
    <div class="chat-history" id="messages">
      <% if (chat && chat.length > 0) { %>
        <% chat.forEach(function(msg) { %>
          <div class="chat-message">
            <strong><%= msg.sender %>:</strong> <%= msg.messageText %>
          </div>
        <% }); %>
      <% } else { %>
        <p>No chat history found.</p>
      <% } %>
    </div>
    <form id="chatForm" class="chat-form" action="">
      <input id="input" class="chat-input" autocomplete="off" placeholder="Type your message here..." /><button class="chat-send">Send</button>
    </form>
    <section id="feedback-section" class="chat-feedback">
      <h3>Your Feedback</h3>
      <form id="feedbackForm">
        <label for="satisfaction">How satisfied were you with the assistance provided?</label>
        <select id="satisfaction" name="satisfaction">
          <option value="positive">Positive</option>
          <option value="neutral">Neutral</option>
          <option value="negative">Negative</option>
        </select>
        <button type="submit">Submit Feedback</button>
      </form>
    </section>
  </main>
  <script src="/js/chatInterface.js"></script>
  <script>
    var socket = io();

    var chatForm = document.getElementById('chatForm');
    var input = document.getElementById('input');
    var userId = document.body.getAttribute('data-user-id');
    var requestId = document.body.getAttribute('data-request-id');

    if (!userId || !requestId) {
      console.error('Missing userId or requestId. Please ensure you are logged in and have selected a valid request.');
      alert('Missing userId or requestId. You will be redirected to the homepage.');
      window.location.href = '/';
    } else {
      socket.emit('join room', requestId);

      chatForm.addEventListener('submit', function(e) {
        e.preventDefault();
        if (input.value.trim()) {
          console.log('Sending message:', input.value);
          socket.emit('send message', { roomId: requestId, text: input.value, sender: 'user', userId: userId });
          input.value = '';
        }
      });

      socket.on('new message', function(data) {
        console.log('Message received:', data.text);
        var item = document.createElement('div');
        item.classList.add('chat-message');
        item.innerHTML = `<strong>${data.sender}:</strong> ${data.text}`;
        document.getElementById('messages').appendChild(item);
        window.scrollTo(0, document.body.scrollHeight);
      });

      socket.on('connect_error', (err) => {
        console.error('Connection error:', err.message, err.stack);
        alert('Error connecting to chat service. Please try again later.');
      });

      document.getElementById('feedbackForm').addEventListener('submit', function(e) {
        e.preventDefault();
        var satisfaction = document.getElementById('satisfaction').value;
        var feedbackData = { requestId: requestId, userSatisfaction: satisfaction };
        
        fetch('/api/feedback', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(feedbackData),
        })
        .then(response => response.json())
        .then(data => {
          console.log('Feedback submitted:', data);
          alert('Thank you for your feedback!');
        })
        .catch((error) => {
          console.error('Error submitting feedback:', error);
        });
      });
    }
  </script>
</body>
</html>